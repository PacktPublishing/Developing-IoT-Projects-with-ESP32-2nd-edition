stages:
  - build
  - deploy

variables:
  V: "0"
  MAKEFLAGS: "-j8 --no-keep-going"
  IDF_PATH: "$CI_PROJECT_DIR/esp-idf"
  APP_BUILD: "all"
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
   # add gitlab ssh key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GITLAB_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    # Create insights-bins-${CI_JOB_ID}/ dir (to copy binaries into for artifacts)
    - mkdir -p $CI_PROJECT_DIR/insights-bins-${CI_JOB_ID}

.setup_idf: &setup_idf
# Checking git version
- echo Checking git version
- git --version
# Cloning esp-idf - Started
- echo Cloning esp-idf - Started
- git clone --recursive --branch v4.3 --depth 1 ${IDF_GIT_PATH}/esp-idf.git
- cd esp-idf
- echo Cloning esp-idf - Done
# Cloning esp-idf - Done
# Running install.sh - Started
- echo Running install.sh - Started
- ./install.sh
- echo Running install.sh - Done
# Running install.sh - Done
# Running export.sh - Started
- echo Running export.sh - Started
- . export.sh
- echo Running export.sh - Done
# Running export.sh - Done
# Applying patch for v4.3
- git apply $CI_PROJECT_DIR/idf-patches/Diagnostics-support-in-esp-idf-tag-v4.3.patch

.build_minimal_diagnostics: &build_minimal_diagnostics
# Building minimal_diagnostics app - Started
- echo Building minimal_diagnostics app - Started
- ls
- cd $CI_PROJECT_DIR/examples/minimal_diagnostics
- echo Running idf.py
- idf.py build
- echo Building minimal_diagnostics app - Done
# Building minimal_diagnostics app - Done
# Copying minimal_diagnostics.bin to insights-bins-${CI_JOB_ID}/
- echo Copy minimal_diagnostics.bin to insights-bins-${CI_JOB_ID}/
- cp $CI_PROJECT_DIR/examples/minimal_diagnostics/build/minimal_diagnostics.bin $CI_PROJECT_DIR/insights-bins-${CI_JOB_ID}/

.build_diagnostics_smoke_test: &build_diagnostics_smoke_test
- echo Building diagnostics_smoke_test app - Started
- ls
- cd $CI_PROJECT_DIR/examples/diagnostics_smoke_test

# esp-idf branch:master, target:ESP32
- echo Building app on esp-idf master for ESP32
- idf.py set-target esp32
- idf.py build
# Copying diagnostics smoke binary for esp-idf master and target ESP32 to artifacts
- echo Copy diagnostics_smoke_test.bin to insights-bins-${CI_JOB_ID}/
- cp $CI_PROJECT_DIR/examples/diagnostics_smoke_test/build/diagnostics_smoke_test.bin $CI_PROJECT_DIR/insights-bins-${CI_JOB_ID}/
- rm -rf build sdkconfig

# esp-idf branch:master, target:ESP32S2
- echo Building app on esp-idf master for ESP32S2
- idf.py set-target esp32s2
- idf.py build
- rm -rf build sdkconfig

# esp-idf branch:master, target:ESP32C3
- echo Building app on esp-idf master for ESP32C3
- idf.py set-target esp32c3
- idf.py build
- rm -rf build sdkconfig

- echo Building diagnostics_smoke_test app - Done

build_app:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build
  artifacts:
    paths:
      - $CI_PROJECT_DIR/insights-bins-${CI_JOB_ID}.zip
    expire_in: 6 mos
  script:
    - *setup_idf
    - for APP in $APP_BUILD; do
    - if [[ "$APP_BUILD" == "all" || "$APP" == "minimal_diagnostics" ]]; then
    - *build_minimal_diagnostics
    - fi
    - if [[ "$APP_BUILD" == "all" || "$APP" == "diagnostics_smoke_test" ]]; then
    - *build_diagnostics_smoke_test
    - fi
    - done
    - echo Build Complete for $APP_BUILD
    # Generating zip file for binaries generated
    - cd $CI_PROJECT_DIR
    - echo Generating zip file for binaries generated
    - tar -zcvf insights-bins-${CI_JOB_ID}.zip insights-bins-${CI_JOB_ID}/
  
push_master_to_github:
  stage: deploy
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - build
  when: on_success
  dependencies: []
  only:
    - master
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote remove github &>/dev/null || true
    - git remote add github git@github.com:espressif/esp-insights.git
    - git push github "${CI_COMMIT_SHA}:refs/heads/${CI_COMMIT_REF_NAME}"
